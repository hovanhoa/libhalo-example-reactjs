{"ast":null,"code":"/**\n * Default options.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Function} [createWebSocket=url => new WebSocket(url)] - custom function for WebSocket construction.\n  *\n * @property {Function} [packMessage=noop] - packs message for sending. For example, `data => JSON.stringify(data)`.\n *\n * @property {Function} [unpackMessage=noop] - unpacks received message. For example, `data => JSON.parse(data)`.\n *\n * @property {Function} [attachRequestId=noop] - injects request id into data.\n * For example, `(data, requestId) => Object.assign({requestId}, data)`.\n *\n * @property {Function} [extractRequestId=noop] - extracts request id from received data.\n * For example, `data => data.requestId`.\n *\n * @property {Function} [extractMessageData=event => event.data] - extracts data from event object.\n *\n * @property {Number} timeout=0 - timeout for opening connection and sending messages.\n *\n * @property {Number} connectionTimeout=0 - special timeout for opening connection, by default equals to `timeout`.\n *\n * @defaults\n * please see [options.js](https://github.com/vitalets/websocket-as-promised/blob/master/src/options.js)\n */\n\nmodule.exports = {\n  /**\n   * See {@link Options.createWebSocket}\n   *\n   * @param {String} url\n   * @returns {WebSocket}\n   */\n  createWebSocket: url => new WebSocket(url),\n  /**\n   * See {@link Options.packMessage}\n   *\n   * @param {*} data\n   * @returns {String|ArrayBuffer|Blob}\n   */\n  packMessage: null,\n  /**\n   * See {@link Options.unpackMessage}\n   *\n   * @param {String|ArrayBuffer|Blob} data\n   * @returns {*}\n   */\n  unpackMessage: null,\n  /**\n   * See {@link Options.attachRequestId}\n   *\n   * @param {*} data\n   * @param {String|Number} requestId\n   * @returns {*}\n   */\n  attachRequestId: null,\n  /**\n   * See {@link Options.extractRequestId}\n   *\n   * @param {*} data\n   * @returns {String|Number|undefined}\n   */\n  extractRequestId: null,\n  /**\n   * See {@link Options.extractMessageData}\n   *\n   * @param {*} event\n   * @returns {*}\n   */\n  extractMessageData: event => event.data,\n  /**\n   * See {@link Options.timeout}\n   */\n  timeout: 0,\n  /**\n   * See {@link Options.connectionTimeout}\n   */\n  connectionTimeout: 0\n};","map":{"version":3,"names":["module","exports","createWebSocket","url","WebSocket","packMessage","unpackMessage","attachRequestId","extractRequestId","extractMessageData","event","data","timeout","connectionTimeout"],"sources":["/Users/user/Desktop/Kardia/libhalo-example-reactjs/node_modules/websocket-as-promised/src/options.js"],"sourcesContent":["/**\n * Default options.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Function} [createWebSocket=url => new WebSocket(url)] - custom function for WebSocket construction.\n  *\n * @property {Function} [packMessage=noop] - packs message for sending. For example, `data => JSON.stringify(data)`.\n *\n * @property {Function} [unpackMessage=noop] - unpacks received message. For example, `data => JSON.parse(data)`.\n *\n * @property {Function} [attachRequestId=noop] - injects request id into data.\n * For example, `(data, requestId) => Object.assign({requestId}, data)`.\n *\n * @property {Function} [extractRequestId=noop] - extracts request id from received data.\n * For example, `data => data.requestId`.\n *\n * @property {Function} [extractMessageData=event => event.data] - extracts data from event object.\n *\n * @property {Number} timeout=0 - timeout for opening connection and sending messages.\n *\n * @property {Number} connectionTimeout=0 - special timeout for opening connection, by default equals to `timeout`.\n *\n * @defaults\n * please see [options.js](https://github.com/vitalets/websocket-as-promised/blob/master/src/options.js)\n */\n\nmodule.exports = {\n  /**\n   * See {@link Options.createWebSocket}\n   *\n   * @param {String} url\n   * @returns {WebSocket}\n   */\n  createWebSocket: url => new WebSocket(url),\n\n  /**\n   * See {@link Options.packMessage}\n   *\n   * @param {*} data\n   * @returns {String|ArrayBuffer|Blob}\n   */\n  packMessage: null,\n\n  /**\n   * See {@link Options.unpackMessage}\n   *\n   * @param {String|ArrayBuffer|Blob} data\n   * @returns {*}\n   */\n  unpackMessage: null,\n\n  /**\n   * See {@link Options.attachRequestId}\n   *\n   * @param {*} data\n   * @param {String|Number} requestId\n   * @returns {*}\n   */\n  attachRequestId: null,\n\n  /**\n   * See {@link Options.extractRequestId}\n   *\n   * @param {*} data\n   * @returns {String|Number|undefined}\n   */\n  extractRequestId: null,\n\n  /**\n   * See {@link Options.extractMessageData}\n   *\n   * @param {*} event\n   * @returns {*}\n   */\n  extractMessageData: event => event.data,\n\n  /**\n   * See {@link Options.timeout}\n   */\n  timeout: 0,\n\n  /**\n   * See {@link Options.connectionTimeout}\n   */\n  connectionTimeout: 0,\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAG;EACf;AACF;AACA;AACA;AACA;AACA;EACEC,eAAe,EAAEC,GAAG,IAAI,IAAIC,SAAS,CAACD,GAAG,CAAC;EAE1C;AACF;AACA;AACA;AACA;AACA;EACEE,WAAW,EAAE,IAAI;EAEjB;AACF;AACA;AACA;AACA;AACA;EACEC,aAAa,EAAE,IAAI;EAEnB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,eAAe,EAAE,IAAI;EAErB;AACF;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,IAAI;EAEtB;AACF;AACA;AACA;AACA;AACA;EACEC,kBAAkB,EAAEC,KAAK,IAAIA,KAAK,CAACC,IAAI;EAEvC;AACF;AACA;EACEC,OAAO,EAAE,CAAC;EAEV;AACF;AACA;EACEC,iBAAiB,EAAE;AACrB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}