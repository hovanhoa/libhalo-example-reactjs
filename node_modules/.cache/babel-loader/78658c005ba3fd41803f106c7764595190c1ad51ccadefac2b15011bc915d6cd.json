{"ast":null,"code":"/**\n * Simple check for Promise.\n * @param {*} p\n * @returns {Boolean}\n * @ignore\n */\nexports.isPromise = function (p) {\n  return p && typeof p.then === 'function';\n};\n\n/**\n * Calls argument if it is function\n * @param {*} value\n * @returns {*}\n * @ignore\n */\nexports.tryCall = function (value) {\n  return typeof value === 'function' ? value() : value;\n};\n\n/**\n * Just `class MyError extends Error` does not work with transpiler.\n * See: https://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript\n * @ignore\n */\nexports.createErrorType = function (name) {\n  function E(message) {\n    if (!Error.captureStackTrace) {\n      this.stack = new Error().stack;\n    } else {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    this.message = message;\n  }\n  E.prototype = new Error();\n  E.prototype.name = name;\n  E.prototype.constructor = E;\n  return E;\n};","map":{"version":3,"names":["exports","isPromise","p","then","tryCall","value","createErrorType","name","E","message","Error","captureStackTrace","stack","constructor","prototype"],"sources":["/Users/user/Desktop/Kardia/libhalo-example-reactjs/node_modules/promise-controller/src/utils.js"],"sourcesContent":["\n/**\n * Simple check for Promise.\n * @param {*} p\n * @returns {Boolean}\n * @ignore\n */\nexports.isPromise = function (p) {\n  return p && typeof p.then === 'function';\n};\n\n/**\n * Calls argument if it is function\n * @param {*} value\n * @returns {*}\n * @ignore\n */\nexports.tryCall = function (value) {\n  return typeof value === 'function' ? value() : value;\n};\n\n/**\n * Just `class MyError extends Error` does not work with transpiler.\n * See: https://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript\n * @ignore\n */\nexports.createErrorType = function (name) {\n  function E(message) {\n    if (!Error.captureStackTrace) {\n      this.stack = (new Error()).stack;\n    } else {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    this.message = message;\n  }\n  E.prototype = new Error();\n  E.prototype.name = name;\n  E.prototype.constructor = E;\n  return E;\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAACC,SAAS,GAAG,UAAUC,CAAC,EAAE;EAC/B,OAAOA,CAAC,IAAI,OAAOA,CAAC,CAACC,IAAI,KAAK,UAAU;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAH,OAAO,CAACI,OAAO,GAAG,UAAUC,KAAK,EAAE;EACjC,OAAO,OAAOA,KAAK,KAAK,UAAU,GAAGA,KAAK,CAAC,CAAC,GAAGA,KAAK;AACtD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAL,OAAO,CAACM,eAAe,GAAG,UAAUC,IAAI,EAAE;EACxC,SAASC,CAACA,CAACC,OAAO,EAAE;IAClB,IAAI,CAACC,KAAK,CAACC,iBAAiB,EAAE;MAC5B,IAAI,CAACC,KAAK,GAAI,IAAIF,KAAK,CAAC,CAAC,CAAEE,KAAK;IAClC,CAAC,MAAM;MACLF,KAAK,CAACC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACE,WAAW,CAAC;IACjD;IACA,IAAI,CAACJ,OAAO,GAAGA,OAAO;EACxB;EACAD,CAAC,CAACM,SAAS,GAAG,IAAIJ,KAAK,CAAC,CAAC;EACzBF,CAAC,CAACM,SAAS,CAACP,IAAI,GAAGA,IAAI;EACvBC,CAAC,CAACM,SAAS,CAACD,WAAW,GAAGL,CAAC;EAC3B,OAAOA,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}