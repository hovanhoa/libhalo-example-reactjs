{"ast":null,"code":"const Buffer = require('buffer/').Buffer;\nconst crypto = require('crypto');\nconst subtle = crypto.webcrypto && crypto.webcrypto.subtle ? crypto.webcrypto.subtle : globalThis.crypto.subtle;\nconst jose = require('jose');\nclass JWEUtil {\n  constructor() {}\n  async generateKey() {\n    let sharedKey = crypto.randomBytes(16);\n    let sharedKeyEnc = sharedKey.toString('base64').replace('+', '-').replace('/', '_').replace('==', '');\n    this.sharedKeyObj = await subtle.importKey(\"raw\", sharedKey, \"AES-GCM\", true, [\"encrypt\", \"decrypt\"]);\n    return sharedKeyEnc;\n  }\n  async loadKey(sharedKey) {\n    // automatically add \"=\" padding if it's not present\n    let padLen = -sharedKey.length % 3 + 3;\n    if (padLen === 3) {\n      padLen = 0;\n    }\n    const fixedKeyStr = (sharedKey + \"=\".repeat(padLen)).replace('-', '+').replace('_', '/');\n    const sharedKeyBuf = Buffer.from(fixedKeyStr, 'base64');\n    this.sharedKeyObj = await subtle.importKey(\"raw\", sharedKeyBuf, \"AES-GCM\", true, [\"encrypt\", \"decrypt\"]);\n  }\n  async encrypt(data) {\n    return await new jose.CompactEncrypt(new TextEncoder().encode(JSON.stringify(data))).setProtectedHeader({\n      alg: 'dir',\n      enc: 'A128GCM'\n    }).encrypt(this.sharedKeyObj);\n  }\n  async decrypt(jwe) {\n    const hdr = jose.decodeProtectedHeader(jwe);\n    if (Object.keys(hdr).length !== 2 || hdr.alg !== \"dir\" || hdr.enc !== \"A128GCM\") {\n      throw new Error(\"Unexpected type of JWE provided.\");\n    }\n    const {\n      plaintext,\n      protectedHeader\n    } = await jose.compactDecrypt(jwe, this.sharedKeyObj);\n    return JSON.parse(new TextDecoder().decode(plaintext));\n  }\n}\nmodule.exports = {\n  JWEUtil\n};","map":{"version":3,"names":["Buffer","require","crypto","subtle","webcrypto","globalThis","jose","JWEUtil","constructor","generateKey","sharedKey","randomBytes","sharedKeyEnc","toString","replace","sharedKeyObj","importKey","loadKey","padLen","length","fixedKeyStr","repeat","sharedKeyBuf","from","encrypt","data","CompactEncrypt","TextEncoder","encode","JSON","stringify","setProtectedHeader","alg","enc","decrypt","jwe","hdr","decodeProtectedHeader","Object","keys","Error","plaintext","protectedHeader","compactDecrypt","parse","TextDecoder","decode","module","exports"],"sources":["/Users/user/Desktop/Kardia/libhalo-example-reactjs/src/libhalo/halo/jwe_util.js"],"sourcesContent":["const Buffer = require('buffer/').Buffer;\nconst crypto = require('crypto');\nconst subtle = crypto.webcrypto && crypto.webcrypto.subtle ? crypto.webcrypto.subtle : globalThis.crypto.subtle;\nconst jose = require('jose');\n\nclass JWEUtil {\n    constructor() {\n\n    }\n\n    async generateKey() {\n        let sharedKey = crypto.randomBytes(16)\n        let sharedKeyEnc = sharedKey\n            .toString('base64')\n            .replace('+', '-')\n            .replace('/', '_')\n            .replace('==', '');\n\n        this.sharedKeyObj = await subtle.importKey(\"raw\", sharedKey, \"AES-GCM\", true, [\n            \"encrypt\",\n            \"decrypt\",\n        ]);\n        return sharedKeyEnc;\n    }\n\n    async loadKey(sharedKey) {\n        // automatically add \"=\" padding if it's not present\n        let padLen = (-sharedKey.length % 3) + 3;\n\n        if (padLen === 3) {\n            padLen = 0;\n        }\n\n        const fixedKeyStr = (sharedKey + \"=\".repeat(padLen))\n            .replace('-', '+')\n            .replace('_', '/');\n        const sharedKeyBuf = Buffer.from(fixedKeyStr, 'base64');\n        this.sharedKeyObj = await subtle.importKey(\"raw\", sharedKeyBuf, \"AES-GCM\", true, [\n            \"encrypt\",\n            \"decrypt\",\n        ]);\n    }\n\n    async encrypt(data) {\n        return await new jose.CompactEncrypt(\n            new TextEncoder().encode(JSON.stringify(data)))\n            .setProtectedHeader({alg: 'dir', enc: 'A128GCM'})\n            .encrypt(this.sharedKeyObj);\n    }\n\n    async decrypt(jwe) {\n        const hdr = jose.decodeProtectedHeader(jwe);\n\n        if (Object.keys(hdr).length !== 2 || hdr.alg !== \"dir\" || hdr.enc !== \"A128GCM\") {\n            throw new Error(\"Unexpected type of JWE provided.\");\n        }\n\n        const { plaintext, protectedHeader } = await jose.compactDecrypt(jwe, this.sharedKeyObj);\n        return JSON.parse(new TextDecoder().decode(plaintext));\n    }\n}\n\nmodule.exports = {JWEUtil};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}