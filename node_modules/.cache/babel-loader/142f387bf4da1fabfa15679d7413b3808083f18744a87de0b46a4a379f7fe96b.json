{"ast":null,"code":"/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst {\n  HaloLogicError,\n  HaloTagError\n} = require(\"../halo/exceptions\");\nconst {\n  cmdGetPkeys,\n  cmdSign,\n  cmdCfgNDEF,\n  cmdWriteLatch,\n  cmdSignRandom,\n  cmdGenKey,\n  cmdGenKeyConfirm,\n  cmdGenKeyFinalize,\n  cmdSignChallenge\n} = require(\"../halo/commands\");\nconst {\n  ERROR_CODES\n} = require(\"../halo/errors\");\nasync function execHaloCmd(command, options) {\n  command = Object.assign({}, command);\n  let commandName = command.name;\n  delete command['name'];\n  switch (commandName) {\n    case 'get_pkeys':\n      return await cmdGetPkeys(options, command);\n    case 'sign':\n      return await cmdSign(options, command);\n    case 'sign_random':\n      return await cmdSignRandom(options, command);\n    case 'sign_challenge':\n      return await cmdSignChallenge(options, command);\n    case 'write_latch':\n      return await cmdWriteLatch(options, command);\n    case 'cfg_ndef':\n      return await cmdCfgNDEF(options, command);\n    case 'gen_key':\n      return await cmdGenKey(options, command);\n    case 'gen_key_confirm':\n      return await cmdGenKeyConfirm(options, command);\n    case 'gen_key_finalize':\n      return await cmdGenKeyFinalize(options, command);\n    default:\n      throw new HaloLogicError(\"Unsupported command.name parameter specified.\");\n  }\n}\nfunction checkErrors(res) {\n  if (res.length === 2 && res[0] === 0xE1) {\n    if (ERROR_CODES.hasOwnProperty(res[1])) {\n      let err = ERROR_CODES[res[1]];\n      throw new HaloTagError(err[0], \"Tag responded with error: [\" + err[0] + \"] \" + err[1]);\n    } else {\n      throw new HaloLogicError(\"Tag responded with unknown error: \" + res.toString('hex'));\n    }\n  }\n}\nmodule.exports = {\n  execHaloCmd,\n  checkErrors\n};","map":{"version":3,"names":["HaloLogicError","HaloTagError","require","cmdGetPkeys","cmdSign","cmdCfgNDEF","cmdWriteLatch","cmdSignRandom","cmdGenKey","cmdGenKeyConfirm","cmdGenKeyFinalize","cmdSignChallenge","ERROR_CODES","execHaloCmd","command","options","Object","assign","commandName","name","checkErrors","res","length","hasOwnProperty","err","toString","module","exports"],"sources":["/Users/user/Desktop/Kardia/libhalo-example-reactjs/src/libhalo/drivers/common.js"],"sourcesContent":["/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst {\n    HaloLogicError,\n    HaloTagError\n} = require(\"../halo/exceptions\");\nconst {\n    cmdGetPkeys, cmdSign, cmdCfgNDEF, cmdWriteLatch, cmdSignRandom, cmdGenKey, cmdGenKeyConfirm, cmdGenKeyFinalize,\n    cmdSignChallenge\n} = require(\"../halo/commands\");\nconst {ERROR_CODES} = require(\"../halo/errors\");\n\nasync function execHaloCmd(command, options) {\n    command = Object.assign({}, command);\n\n    let commandName = command.name;\n    delete command['name'];\n\n    switch (commandName) {\n        case 'get_pkeys':\n            return await cmdGetPkeys(options, command);\n        case 'sign':\n            return await cmdSign(options, command);\n        case 'sign_random':\n            return await cmdSignRandom(options, command);\n        case 'sign_challenge':\n            return await cmdSignChallenge(options, command);\n        case 'write_latch':\n            return await cmdWriteLatch(options, command);\n        case 'cfg_ndef':\n            return await cmdCfgNDEF(options, command);\n        case 'gen_key':\n            return await cmdGenKey(options, command);\n        case 'gen_key_confirm':\n            return await cmdGenKeyConfirm(options, command);\n        case 'gen_key_finalize':\n            return await cmdGenKeyFinalize(options, command);\n        default:\n            throw new HaloLogicError(\"Unsupported command.name parameter specified.\");\n    }\n}\n\nfunction checkErrors(res) {\n    if (res.length === 2 && res[0] === 0xE1) {\n        if (ERROR_CODES.hasOwnProperty(res[1])) {\n            let err = ERROR_CODES[res[1]];\n            throw new HaloTagError(err[0], \"Tag responded with error: [\" + err[0] + \"] \" + err[1]);\n        } else {\n            throw new HaloLogicError(\"Tag responded with unknown error: \" + res.toString('hex'));\n        }\n    }\n}\n\nmodule.exports = {\n    execHaloCmd,\n    checkErrors\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EACFA,cAAc;EACdC;AACJ,CAAC,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjC,MAAM;EACFC,WAAW;EAAEC,OAAO;EAAEC,UAAU;EAAEC,aAAa;EAAEC,aAAa;EAAEC,SAAS;EAAEC,gBAAgB;EAAEC,iBAAiB;EAC9GC;AACJ,CAAC,GAAGT,OAAO,CAAC,kBAAkB,CAAC;AAC/B,MAAM;EAACU;AAAW,CAAC,GAAGV,OAAO,CAAC,gBAAgB,CAAC;AAE/C,eAAeW,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;EACzCD,OAAO,GAAGE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,OAAO,CAAC;EAEpC,IAAII,WAAW,GAAGJ,OAAO,CAACK,IAAI;EAC9B,OAAOL,OAAO,CAAC,MAAM,CAAC;EAEtB,QAAQI,WAAW;IACf,KAAK,WAAW;MACZ,OAAO,MAAMf,WAAW,CAACY,OAAO,EAAED,OAAO,CAAC;IAC9C,KAAK,MAAM;MACP,OAAO,MAAMV,OAAO,CAACW,OAAO,EAAED,OAAO,CAAC;IAC1C,KAAK,aAAa;MACd,OAAO,MAAMP,aAAa,CAACQ,OAAO,EAAED,OAAO,CAAC;IAChD,KAAK,gBAAgB;MACjB,OAAO,MAAMH,gBAAgB,CAACI,OAAO,EAAED,OAAO,CAAC;IACnD,KAAK,aAAa;MACd,OAAO,MAAMR,aAAa,CAACS,OAAO,EAAED,OAAO,CAAC;IAChD,KAAK,UAAU;MACX,OAAO,MAAMT,UAAU,CAACU,OAAO,EAAED,OAAO,CAAC;IAC7C,KAAK,SAAS;MACV,OAAO,MAAMN,SAAS,CAACO,OAAO,EAAED,OAAO,CAAC;IAC5C,KAAK,iBAAiB;MAClB,OAAO,MAAML,gBAAgB,CAACM,OAAO,EAAED,OAAO,CAAC;IACnD,KAAK,kBAAkB;MACnB,OAAO,MAAMJ,iBAAiB,CAACK,OAAO,EAAED,OAAO,CAAC;IACpD;MACI,MAAM,IAAId,cAAc,CAAC,+CAA+C,CAAC;EACjF;AACJ;AAEA,SAASoB,WAAWA,CAACC,GAAG,EAAE;EACtB,IAAIA,GAAG,CAACC,MAAM,KAAK,CAAC,IAAID,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;IACrC,IAAIT,WAAW,CAACW,cAAc,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;MACpC,IAAIG,GAAG,GAAGZ,WAAW,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7B,MAAM,IAAIpB,YAAY,CAACuB,GAAG,CAAC,CAAC,CAAC,EAAE,6BAA6B,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,GAAGA,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1F,CAAC,MAAM;MACH,MAAM,IAAIxB,cAAc,CAAC,oCAAoC,GAAGqB,GAAG,CAACI,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxF;EACJ;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG;EACbd,WAAW;EACXO;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}